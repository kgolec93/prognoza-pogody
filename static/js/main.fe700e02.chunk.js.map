{"version":3,"sources":["icons/sun.svg","icons/cloud.svg","icons/rain.svg","icons/storm.svg","icons/drizzle.svg","icons/snow.svg","icons/mist.svg","img/sun.jpg","img/clouds.jpg","img/rain.jpg","img/storm.jpg","img/drizzle.jpg","img/snow.jpg","img/mist.jpg","icons/drop-down.svg","icons/arr-north.svg","icons/arr-back.svg","icons/arr-next.svg","icons/location.svg","components/Search.js","components/ResultItem.js","components/CurrentWeather.js","components/SearchResults.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Search","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getLocation","navigator","geolocation","getCurrentPosition","showPosition","alert","position","props","getWeatherData","concat","coords","latitude","longitude","setState","isInputEmpty","initialValue","onKeyUp","e","searchedValue","target","value","handleKeyPress","keyCode","handleClick","refs","searchInput","trim","searchValue","state","city","weatherData","inherits","createClass","key","_this2","react_default","a","createElement","id","className","initial","type","placeholder","ref","onClick","Component","ResultItem","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","extended","listDropdown","uuid","v4","style","backgroundImage","weatherType","background","backgroundSize","backgroundPosition","width","height","padding","display","date","day","time","src","icon","alt","temp","weather","pressure","cloudiness","windSpeed","North","transform","windDirection","Arrow","CurrentWeather","prop","x","Icon_Sun","Bg_Sun","Icon_Cloud","Bg_Clouds","Icon_Rain","Bg_Rain","Icon_Storm","Bg_Storm","Icon_Drizzle","Bg_Drizzle","Icon_Snow","Bg_Snow","Icon_Mist","Bg_Mist","convert","main","SearchResults","tempConvert","Math","ceil","pressConvert","press","cloudConvert","cloud","windConvert","wind","round","getFullDate","item","month","Date","getDate","year","getFullYear","getMonth","toUpperCase","getTime","hours","getHours","getCurrentDay","getDay","scrollRight","movement","resultList","scrollWidth","scrollLeft","components_CurrentWeather","currentWeather","Back","map","components_ResultItem","dt","clouds","all","speed","deg","Next","App","appId","isInitial","cityName","fetch","then","resp","json","res","cod","arr","name","list","removeInitial","components_Search","weatherGeolocation","getWeatherDataLoc","components_SearchResults","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe700e02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sun.2cdeec72.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud.95bde7d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.cb7ac759.svg\";","module.exports = __webpack_public_path__ + \"static/media/storm.f93f841c.svg\";","module.exports = __webpack_public_path__ + \"static/media/drizzle.aaa9ea68.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.427ef95c.svg\";","module.exports = __webpack_public_path__ + \"static/media/mist.b998c21a.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.cf697ba7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clouds.91a332a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rain.257d318a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/storm.031c8036.jpg\";","module.exports = __webpack_public_path__ + \"static/media/drizzle.dbe84497.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snow.51bed3a4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mist.1f2c22c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/drop-down.bfc53b6a.svg\";","module.exports = __webpack_public_path__ + \"static/media/arr-north.85fc7430.svg\";","module.exports = __webpack_public_path__ + \"static/media/arr-back.290174b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/arr-next.1ee4c3ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/location.d9d208a8.svg\";","import React, { Component } from 'react'\r\nimport Location from '../icons/location.svg'\r\n\r\n\r\n////////////////////////////////////////////////////\r\n////////////// SEARCH INPUT COMPONENT //////////////\r\n////////////////////////////////////////////////////\r\n\r\nexport class Search extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            city: '',\r\n            weatherData: '',\r\n            initialValue: true,\r\n            isInputEmpty: false,\r\n            searchedValue: ''\r\n        }\r\n    }\r\n\r\n    ////// GET WEATHER BY GEOLOCATION /////////\r\n    getLocation = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(this.showPosition);\r\n        } \r\n        else { \r\n            alert(\"Twoja przeglądarka nie posiada funkcji geolokalizacji\");\r\n        }\r\n    }\r\n\r\n    showPosition = (position) => {\r\n        this.props.getWeatherData(`lat=${position.coords.latitude}&lon=${position.coords.longitude}`);\r\n        this.setState({isInputEmpty: false, initialValue: true});\r\n    }\r\n\r\n\r\n    /////// Event Handlers //////\r\n\r\n    onKeyUp = (e) => {\r\n        //change state searched value on change\r\n        this.setState({searchedValue: e.target.value});\r\n    }\r\n\r\n    //trigger search function on pressing 'enter'\r\n    handleKeyPress = (e) => {\r\n        //check if enter was pressed\r\n        if (e.keyCode === 13) {\r\n            //trigger search function\r\n            this.handleClick();\r\n        }\r\n    }\r\n\r\n    //search submit function\r\n    handleClick = () => {\r\n        // check if the input field is not empty\r\n        if (this.refs.searchInput.value.trim() !== '') {\r\n\r\n            //get the data from the input\r\n            const searchValue = this.state.searchedValue;\r\n            //export input value to the main function and run it\r\n            this.props.getWeatherData(`q=${searchValue}`);\r\n            //move imported data to the state\r\n            this.setState({isInputEmpty: false, initialValue: true});\r\n            //clear input value\r\n            this.refs.searchInput.value = '';\r\n            \r\n        }\r\n\r\n        //// show warning if empty input field\r\n        else {\r\n            // add paragraph with the warning\r\n            this.setState({isInputEmpty: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"search-city\" className={`${this.props.initial ? '': 'searched'}`} onKeyUp={(e) => this.handleKeyPress(e)}>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Wpisz swoje miasto\" \r\n                    ref=\"searchInput\"\r\n                    onKeyUp={this.onKeyUp}\r\n                />\r\n                <button \r\n                    onClick={() => this.handleClick()}>\r\n                    Wyszukaj miasto\r\n                </button><br />\r\n                {/* <img src={Location} alt=\"\" id=\"location\" onClick={this.getLocation}/> */}\r\n                <p className={`${this.state.isInputEmpty ? 'visible': ''}`}>Musisz wpisać miasto!</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search","import React, { Component } from 'react';\r\nimport Arrow from '../icons/drop-down.svg';\r\nimport North from '../icons/arr-north.svg';\r\nimport uuid from 'uuid';\r\n\r\nexport class ResultItem extends Component {\r\n\r\n    state = {\r\n        extended: false\r\n    }\r\n\r\n    //list dropdown\r\n    listDropdown = () => {\r\n        this.setState({extended: !this.state.extended})\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <li key={uuid.v4()} className=\"result-item\" style={{backgroundImage: `url('${this.props.weatherType.background}')`, backgroundSize: `cover`, backgroundPosition: `50%`}}>\r\n                <div className=\"bg-cover\" style={{width: '100%', height: '100%', padding: '20px'}}>\r\n                    <div  style={this.state.extended ? {display: 'none'} : {display: 'initial'}}>\r\n                        <div className=\"result-time-container\">\r\n                            <p className=\"result-date\">{this.props.date}</p>\r\n                            <p className=\"result-date\">{this.props.day}</p> \r\n                            <p className=\"result-time\">{this.props.time}</p><br /> \r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"result-weather-container\">\r\n                            <img src={this.props.weatherType.icon} alt=\"\"/>\r\n                            <div>\r\n                                <p className=\"result-temp\">{this.props.temp} °C</p><br />\r\n                                <p>{this.props.weatherType.weather}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <ul className=\"weather-extended\" style={this.state.extended ? {display: 'initial'} : {display: 'none'}}>\r\n                        <li>Temperatura: {this.props.temp} °C</li>\r\n                        <li>{this.props.weatherType.weather}</li>\r\n                        <li>Ciśnienie: {this.props.pressure}</li>\r\n                        <li>Zachmurzenie: {this.props.cloudiness}</li>\r\n                        <li>Wiatr: {this.props.windSpeed}</li>\r\n                        <li>Kierunek wiatru:</li>\r\n                        <img className=\"wind-arrow\" src={North} alt=\"\" style={{transform: `rotate(${this.props.windDirection})`}}/>\r\n                    </ul>\r\n                    <br/>\r\n                    <img className=\"dropdown-arrow\" src={Arrow} alt=\"\" onClick={this.listDropdown} style={this.state.extended ? {transform: 'rotate(180deg)'} : {}}/>\r\n                </div> \r\n\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResultItem\r\n","import React, { Component } from 'react';\r\n\r\n/////////////////////// ICONS ///////////////////////\r\nimport Icon_Sun from '../icons/sun.svg';\r\nimport Icon_Cloud from '../icons/cloud.svg';\r\nimport Icon_Rain from '../icons/rain.svg';\r\nimport Icon_Storm from '../icons/storm.svg';\r\nimport Icon_Drizzle from '../icons/drizzle.svg';\r\nimport Icon_Snow from '../icons/snow.svg';\r\nimport Icon_Mist from '../icons/mist.svg';\r\n\r\n/////////////////// BACKGROUNDS /////////////////////\r\nimport Bg_Sun from '../img/sun.jpg';\r\nimport Bg_Clouds from '../img/clouds.jpg';\r\nimport Bg_Rain from '../img/rain.jpg';\r\nimport Bg_Storm from '../img/storm.jpg';\r\nimport Bg_Drizzle from '../img/drizzle.jpg';\r\nimport Bg_Snow from '../img/snow.jpg';\r\nimport Bg_Mist from '../img/mist.jpg';\r\n\r\n////////////////////////////////////////////////////\r\n///////// JUMBOTRON WITH CURRENT WEATHER ///////////\r\n////////////////////////////////////////////////////\r\n\r\nexport class CurrentWeather extends Component {\r\n\r\n    //get weather type\r\n    weatherType = (prop) => {\r\n        const x = prop.weather[0].id;\r\n        if (x === 800) {\r\n            return ({icon: Icon_Sun, weather: 'Słonecznie', background: Bg_Sun})\r\n        }\r\n        else if (x === 801 || x === 802 || x === 803 || x === 804) {\r\n            return ({icon: Icon_Cloud, weather: 'Pochmurnie', background: Bg_Clouds})\r\n        }\r\n        else if (x === 500 || x === 501 || x === 502 || x === 503 || x === 504 || x === 511 || x === 520 || x === 521 || x === 522 || x === 531) {\r\n            return ({icon: Icon_Rain, weather: 'Deszczowo', background: Bg_Rain})\r\n        }\r\n        else if (x === 200 || x === 201 || x === 202 || x === 210 || x === 211 || x === 212 || x === 221 || x === 230 || x === 231 || x === 232) {\r\n            return ({icon: Icon_Storm, weather: 'Burzowo', background: Bg_Storm})\r\n        }\r\n        else if (x === 300 || x === 301 || x === 302 || x === 310 || x === 311 || x === 312 || x === 313 || x === 314 || x === 321) {\r\n            return ({icon: Icon_Drizzle, weather: 'Mżawka', background: Bg_Drizzle})\r\n        }\r\n        else if (x === 600 || x === 601 || x === 602 || x === 611 || x === 612 || x === 615 || x === 616 || x === 620 || x === 621 || x === 622) {\r\n            return ({icon: Icon_Snow, weather: 'Śnieg', background: Bg_Snow})\r\n        } \r\n        else if (x === 701 || x === 711 || x === 721 ||  x === 741) {\r\n            return ({icon: Icon_Mist, weather: 'Mgła', background: Bg_Mist})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"current-weather-container\" style={{backgroundImage: `url('${this.weatherType(this.props.weather).background}')`, backgroundSize: `cover`, backgroundPosition: `50%`}}>\r\n                <div id=\"jumbotron-content\">\r\n                    <h1>{this.props.city}</h1>\r\n                    <hr />\r\n                    <div className=\"result-weather-container\">\r\n                        <img src={this.weatherType(this.props.weather).icon} alt=\"\"/>\r\n                        <div>\r\n                            <p className=\"result-temp\">{this.props.convert(this.props.weather.main.temp)} °C</p><br />\r\n                            <p>{this.weatherType(this.props.weather).weather}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CurrentWeather\r\n","import React, { Component } from 'react';\r\nimport ResultItem from './ResultItem';\r\nimport CurrentWeather from './CurrentWeather';\r\n\r\n/////////////////////// ICONS ///////////////////////\r\nimport Icon_Sun from '../icons/sun.svg';\r\nimport Icon_Cloud from '../icons/cloud.svg';\r\nimport Icon_Rain from '../icons/rain.svg';\r\nimport Icon_Storm from '../icons/storm.svg';\r\nimport Icon_Drizzle from '../icons/drizzle.svg';\r\nimport Icon_Snow from '../icons/snow.svg';\r\nimport Icon_Mist from '../icons/mist.svg';\r\nimport Back from '../icons/arr-back.svg';\r\nimport Next from '../icons/arr-next.svg';\r\n\r\n/////////////////// BACKGROUNDS /////////////////////\r\nimport Bg_Sun from '../img/sun.jpg';\r\nimport Bg_Clouds from '../img/clouds.jpg';\r\nimport Bg_Rain from '../img/rain.jpg';\r\nimport Bg_Storm from '../img/storm.jpg';\r\nimport Bg_Drizzle from '../img/drizzle.jpg';\r\nimport Bg_Snow from '../img/snow.jpg';\r\nimport Bg_Mist from '../img/mist.jpg';\r\n\r\n////////////////////////////////////////////////////\r\n////////// SEARCH RESULTS MAIN COMPONENT ///////////\r\n////////////////////////////////////////////////////\r\n\r\nexport class SearchResults extends Component {\r\n\r\n    // convert temprature to celcius\r\n    tempConvert = (temp) => {\r\n        return (Math.ceil(temp - 273.15))\r\n    }\r\n\r\n    //convert pressure\r\n    pressConvert = (press) => {\r\n        return (`${Math.ceil(press)} hPa`)\r\n    }\r\n\r\n    //convert cloudiness\r\n    cloudConvert = (cloud) => {\r\n        return (`${Math.ceil(cloud * 100)}%`)\r\n    }\r\n\r\n    //convert wind speed \r\n    windConvert = (wind) => {\r\n        return (`${Math.round(wind * 3,6)} km/h`)\r\n    }\r\n\r\n    //get wind direction\r\n    windDirection = (wind) => {\r\n        return (`${wind+180}deg`)\r\n    }\r\n\r\n    //get weather type\r\n    weatherType = (prop) => {\r\n        const x = prop.weather[0].id;\r\n        if (x === 800) {\r\n            return ({icon: Icon_Sun, weather: 'Słonecznie', background: Bg_Sun})\r\n        }\r\n        else if (x === 801 || x === 802 || x === 803 || x === 804) {\r\n            return ({icon: Icon_Cloud, weather: 'Pochmurnie', background: Bg_Clouds})\r\n        }\r\n        else if (x === 500 || x === 501 || x === 502 || x === 503 || x === 504 || x === 511 || x === 520 || x === 521 || x === 522 || x === 531) {\r\n            return ({icon: Icon_Rain, weather: 'Deszczowo', background: Bg_Rain})\r\n        }\r\n        else if (x === 200 || x === 201 || x === 202 || x === 210 || x === 211 || x === 212 || x === 221 || x === 230 || x === 231 || x === 232) {\r\n            return ({icon: Icon_Storm, weather: 'Burzowo', background: Bg_Storm})\r\n        }\r\n        else if (x === 300 || x === 301 || x === 302 || x === 310 || x === 311 || x === 312 || x === 313 || x === 314 || x === 321) {\r\n            return ({icon: Icon_Drizzle, weather: 'Mżawka', background: Bg_Drizzle})\r\n        }\r\n        else if (x === 600 || x === 601 || x === 602 || x === 611 || x === 612 || x === 615 || x === 616 || x === 620 || x === 621 || x === 622) {\r\n            return ({icon: Icon_Snow, weather: 'Śnieg', background: Bg_Snow})\r\n        } \r\n        else if (x === 701 || x === 711 || x === 721 ||  x === 741) {\r\n            return ({icon: Icon_Mist, weather: 'Mgła', background: Bg_Mist})\r\n        }\r\n    }\r\n\r\n    //get full date (polish months)\r\n    getFullDate = item => {\r\n        let day = new Date(item * 1000).getDate();\r\n        let year = new Date(item * 1000).getFullYear();\r\n        let month\r\n        \r\n        switch (new Date(item * 1000).getMonth()) {\r\n            default:\r\n                day = \"\";\r\n                break;\r\n            case 0:\r\n                month = \"Stycznia\";\r\n                break;\r\n            case 1:\r\n                month = \"Lutego\";\r\n                break;\r\n            case 2:\r\n                month = \"Marca\";\r\n                break;\r\n            case 3:\r\n                month = \"Kwietnia\";\r\n                break;\r\n            case 4:\r\n                month = \"Maja\";\r\n                break;\r\n            case 5:\r\n                month = \"Czerwca\";\r\n                break;\r\n            case 6:\r\n                month = \"Lipca\";\r\n                break;\r\n            case 7:\r\n                month = \"Sierpnia\";\r\n                break;\r\n            case 8:\r\n                month = \"Września\";\r\n                break;\r\n            case 9:\r\n                month = \"Października\";\r\n                break;\r\n            case 10:\r\n                month = \"Listopada\";\r\n                break;\r\n            case 11:\r\n                month = \"Grudnia\";\r\n                break;\r\n        }\r\n        return (`${day} ${month} ${year}`.toUpperCase())\r\n    }\r\n\r\n    //get time\r\n    getTime = item => {\r\n        let hours = new Date(item * 1000).getHours();\r\n        return (`${hours}:00`)\r\n    }\r\n\r\n    //get current day name\r\n    getCurrentDay = item => {\r\n        let day\r\n        switch (new Date(item * 1000).getDay()) {\r\n            default:\r\n                day = \"\";\r\n                break;\r\n            case 0:\r\n                day = \"Niedziela\";\r\n                break;\r\n            case 1:\r\n                day = \"Poniedziałek\";\r\n                break;\r\n            case 2:\r\n                day = \"Wtorek\";\r\n                break;\r\n            case 3:\r\n                day = \"Środa\";\r\n                break;\r\n            case 4:\r\n                day = \"Czwartek\";\r\n                break;\r\n            case 5:\r\n                day = \"Piątek\";\r\n                break;\r\n            case 6:\r\n                day = \"Sobota\";\r\n        }\r\n        return (day.toUpperCase())\r\n    }\r\n\r\n    scrollRight = () => {\r\n        const movement = this.refs.resultList.scrollWidth / 15;\r\n        this.refs.resultList.scrollLeft += movement;\r\n    }\r\n\r\n    scrollLeft = () => {\r\n        const movement = this.refs.resultList.scrollWidth / 15;\r\n        this.refs.resultList.scrollLeft -= movement;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"search-results\" className={this.props.initial ? '' : 'visible'} >\r\n                \r\n                <CurrentWeather \r\n                    convert={this.tempConvert}\r\n                    city={this.props.city}\r\n                    weather={this.props.currentWeather}\r\n                />\r\n\r\n                <div id=\"result-container\">\r\n                    <img src={Back} className=\"nav-arrow left\" alt=\"\" onClick={this.scrollLeft}/>\r\n                    <ul id=\"result-list\" ref=\"resultList\">\r\n                        {this.props.weatherData.map((item) => {\r\n                            return (\r\n                                <ResultItem\r\n                                    date={this.getFullDate(item.dt)}\r\n                                    day={this.getCurrentDay(item.dt)}\r\n                                    time={this.getTime(item.dt)}\r\n                                    weatherType={this.weatherType(item)}\r\n                                    temp={this.tempConvert(item.main.temp)}\r\n                                    pressure={this.pressConvert(item.main.pressure)}\r\n                                    cloudiness={this.cloudConvert(item.clouds.all)}\r\n                                    windSpeed={this.windConvert(item.wind.speed)}\r\n                                    windDirection={this.windDirection(item.wind.deg)}\r\n                                />\r\n                            )\r\n                        })} \r\n                    </ul>\r\n                    <img src={Next} className=\"nav-arrow right\" alt=\"\" onClick={this.scrollRight}/>\r\n                </div>\r\n                  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchResults","import React, { Component } from 'react';\nimport './App.css';\nimport Search from './components/Search';\nimport SearchResults from './components/SearchResults';\nimport uuid from 'uuid';\n\nclass App extends Component {\n  state = {\n      appId: '9b5843fa583578140ce467bf3298ef6e',\n      currentWeather: [],\n      weatherData: [],\n      searchValue: \"\",\n      isInitial: true,\n      cityName: []\n  }\n\n\n  getWeatherData = (searchValue) => {\n    //TEST ISSUE\n    // console.log(\"Data z app.js: \", this.state);\n    \n    //set the searched value to the state\n    this.setState({searchValue:searchValue})\n\n    ////////////////////////////////\n    /////// CURRENT WEATHER ////////\n    ////////////////////////////////\n\n    fetch(`https://api.openweathermap.org/data/2.5/weather?${searchValue}&appid=${this.state.appId}`)\n    .then(function(resp){\n      return (resp.json());\n    })\n    .then(res => {\n      if (res.cod === 200) {\n        this.setState({currentWeather: res})\n      }\n    })\n\n    /////////////////////////////////\n    //// 5 DAY / 3 HOUR FORECAST ////\n    /////////////////////////////////\n\n    //importing the data from API ///\n    fetch(`https://api.openweathermap.org/data/2.5/forecast?${searchValue}&appid=${this.state.appId}`)\n    .then(function(resp){\n        return resp.json();\n    })\n    .then(res => {\n      if (res.cod === '200') {\n        const cityName = res.city.name;\n        const arr = [cityName];\n        this.setState({weatherData: res.list, cityName: arr, isInitial:false})\n      }\n      else {\n        alert(\"Nie znaleziono wybranego miasta\");\n      }\n    })\n  }\n\n removeInitial = () => {\n   this.setState({isInitial:false})\n }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h3>Prognoza pogody</h3>\n        </header>\n        <main>\n\n          <Search \n            weatherType={this.state.weatherType}\n            getWeatherData={this.getWeatherData} \n            removeInitial={this.removeInitial} \n            initial={this.state.isInitial}\n            weatherGeolocation={this.getWeatherDataLoc}\n          />\n\n          {/* <button id=\"test-btn\" onClick={() => {if (this.state.weatherData !== \"\") {\n            console.log(this.state)\n            }}}>TEST BUTTON\n          </button> */}\n\n\n          {this.state.cityName.map((item) => {\n            return (<SearchResults \n              key={uuid.v4()}\n              currentWeather={this.state.currentWeather}\n              weatherData={this.state.weatherData} \n              initial={this.state.isInitial} \n              city={item}\n            />)\n            })}\n          \n\n        </main>\n        <footer>\n          <p>kgolec93&copy;2019</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}